name: Build and Deploy

on:
  push:
    branches:
      - dev
  repository_dispatch:
    types: [content-updated]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Start timer
        run: |
          echo "‚è∞ Build started at: $(date)"
          echo "BUILD_START_TIME=$(date +%s)" >> $GITHUB_ENV
      - name: Log webhook info
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "üöÄ Triggered by webhook"
          echo "Event type: ${{ github.event.action }}"
          echo "Client: ${{ github.event.client_payload.userId || 'unknown' }}"
          echo "Reason: ${{ github.event.client_payload.reason || 'unknown' }}"
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
          ref: dev
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # ‚Üê –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ node_modules
      
      # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ Eleventy build
      - name: Cache Eleventy build
        uses: actions/cache@v4
        with:
          path: .cache
          key: ${{ runner.os }}-eleventy-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-eleventy-
      
      # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ _site –¥–ª—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏
      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: _site
          key: ${{ runner.os }}-site-${{ github.ref_name }}-${{ hashFiles('**/*.njk', '**/*.js', '**/*.cjs') }}
          restore-keys: |
            ${{ runner.os }}-site-${{ github.ref_name }}-
            ${{ runner.os }}-site-
          
      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ node_modules
          if [ ! -d "node_modules" ]; then
            npm ci --prefer-offline --no-audit --no-fund
            echo "‚úÖ Dependencies installed"
          else
            echo "‚úÖ Dependencies already cached, skipping install"
          fi
        
      - name: Build site
        env:
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
        run: |
          echo "üî® Building site for client: $CLIENT_ID"
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ _site –∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç
          if [ -d "_site" ] && [ ! -f "_site/.build-trigger" ]; then
            echo "üìÅ Site already built, checking for changes..."
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ content.json –≤ R2
            echo "üîÑ Content may have changed, rebuilding..."
          fi
          
          # –°–æ–∑–¥–∞–µ–º –º–∞—Ä–∫–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏
          touch _site/.build-trigger 2>/dev/null || true
          
          # –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ - –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          npx @11ty/eleventy --incremental
          echo "‚úÖ Build completed"
        
      - name: Deploy to main branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          publish_branch: main
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–µ–ø–ª–æ—è
          force_orphan: true
          disable_nojekyll: true
      
      - name: Build completed timer
        run: |
          BUILD_END_TIME=$(date +%s)
          BUILD_DURATION=$((BUILD_END_TIME - BUILD_START_TIME))
          echo "‚è∞ Build completed at: $(date)"
          echo "üöÄ Total build time: ${BUILD_DURATION} seconds"
