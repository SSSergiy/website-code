name: Build and Deploy

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [content-updated]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --no-fund --silent
        
      - name: Download content.json from R2
        if: github.event_name == 'repository_dispatch'
        env:
          R2_ACCESS_KEY_ID: 8cf75816f7b61b68ed54c7b9ee6a7149
          R2_SECRET_ACCESS_KEY: 0b5862ffbe43af2ee8ba0c4037116852b7c6a5609c5c445574c654e4a23949d7
          R2_ENDPOINT: https://122357ca47842997e22542d75d31da2d.r2.cloudflarestorage.com
          R2_BUCKET_NAME: multi-tenant-cms-storage
          USER_ID: ${{ github.event.client_payload.userId }}
        run: |
          if [ -n "$USER_ID" ]; then
            echo "üì• Downloading content.json from R2 for userId: $USER_ID"
            mkdir -p data
            npm install @aws-sdk/client-s3 --no-save --silent
            node -e "
              const { S3Client, GetObjectCommand } = require('@aws-sdk/client-s3');
              const fs = require('fs');
              const client = new S3Client({
                region: 'auto',
                endpoint: process.env.R2_ENDPOINT,
                credentials: {
                  accessKeyId: process.env.R2_ACCESS_KEY_ID,
                  secretAccessKey: process.env.R2_SECRET_ACCESS_KEY
                }
              });
              const command = new GetObjectCommand({
                Bucket: process.env.R2_BUCKET_NAME,
                Key: \`clients/\${process.env.USER_ID}/data/content.json\`
              });
              client.send(command).then(response => {
                return new Promise((resolve, reject) => {
                  const chunks = [];
                  response.Body.on('data', chunk => chunks.push(chunk));
                  response.Body.on('end', () => {
                    fs.writeFileSync('data/content.json', Buffer.concat(chunks));
                    console.log('‚úÖ content.json downloaded from R2');
                    resolve();
                  });
                  response.Body.on('error', reject);
                });
              }).catch(err => {
                console.error('‚ùå Failed to download from R2:', err.message);
                process.exit(1);
              });
            "
          else
            echo "‚ÑπÔ∏è No userId in payload, using content.json from repository"
          fi
      
      - name: Update content.json in GitHub
        if: github.event_name == 'repository_dispatch' && github.event.client_payload.userId != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f "data/content.json" ]; then
            echo "üîÑ Updating content.json in GitHub repository..."
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º git config
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º remote —Å —Ç–æ–∫–µ–Ω–æ–º
            git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}.git
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            git add data/content.json
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if git diff --staged --quiet; then
              echo "‚ÑπÔ∏è No changes in content.json, skipping commit"
            else
              # –ö–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º
              git commit -m "Update content.json from R2 (triggered by admin panel)"
              git push origin main
              echo "‚úÖ content.json updated in GitHub repository"
            fi
          fi
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.150.1'
          extended: true
        
      - name: Build Hugo site
        run: hugo --minify
        
      - name: Deploy to dev branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: dev
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          force_orphan: true
          disable_nojekyll: true
